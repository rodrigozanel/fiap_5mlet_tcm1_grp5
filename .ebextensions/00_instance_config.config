# ===================================================================
# CONFIGURAÇÕES DE INSTÂNCIA PARA MULTI-CONTAINER DOCKER
# ===================================================================
# 
# Configurações necessárias para Multi-Container Docker no EB
# Nome iniciado com 00_ para ser processado primeiro
# 
# ===================================================================

option_settings:
  # Configurações de instância obrigatórias para Docker
  aws:autoscaling:launchconfiguration:
    InstanceType: t3.small              # Instância compatível (mínimo recomendado para Multi-Container)
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
    SecurityGroups: default
    
  # Configurações de capacidade para Multi-Container
  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 3
    
  # Configurações de ambiente
  aws:elasticbeanstalk:environment:
    EnvironmentType: LoadBalanced       # Requerido para produção
    LoadBalancerType: application       # Application Load Balancer para Docker
    
  # Configurações do Health Check
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    HealthCheckSuccessThreshold: Ok
    
  # Configurações do Load Balancer  
  aws:elbv2:loadbalancer:
    IdleTimeout: 300
    
  # Configurações específicas para o processo padrão
  aws:elasticbeanstalk:environment:process:default:
    Port: 80                           # Porta que o Load Balancer irá usar
    Protocol: HTTP                     # Protocolo HTTP
    HealthCheckPath: /heartbeat        # Endpoint de health check
    HealthCheckInterval: 30            # Verificação a cada 30 segundos
    HealthyThresholdCount: 3           # 3 checks saudáveis para marcar como healthy
    UnhealthyThresholdCount: 5         # 5 checks falhos para marcar como unhealthy
    HealthCheckTimeout: 5              # Timeout de 5 segundos por check
    MatcherHTTPCode: 200               # Código HTTP esperado para sucesso
    
  # Configurações do listener do Load Balancer
  aws:elbv2:listener:80:
    DefaultProcess: default            # Usar o processo padrão
    ListenerEnabled: true              # Habilitar listener na porta 80
    Protocol: HTTP                     # Protocolo HTTP
    Rules: ""                          # Regras vazias (usar padrão)
    
# DEBUGGING: Configurações importantes para verificar conectividade
# =================================================================
# 
# 1. Load Balancer escuta na porta 80 (HTTP)
# 2. Direciona tráfego para instâncias EC2 na porta 80
# 3. Container Flask roda na porta 5000
# 4. Dockerrun.aws.json mapeia: container 5000 → host 80
# 5. Health check: /heartbeat deve retornar 200
# 
# Para testar:
# - Use a URL do Load Balancer (não IP da instância)
# - Acesse: http://SEU-ALB-URL.elasticbeanstalk.com/heartbeat
# - Se health check falhar, verifique logs do container
# 
# NOTA: Tipos de Instância Compatíveis
# ====================================
# Para Multi-Container Docker, recomendados:
# - t3.small   (2 vCPU, 2GB RAM) - Desenvolvimento/Teste
# - t3.medium  (2 vCPU, 4GB RAM) - Produção pequena
# - t3.large   (2 vCPU, 8GB RAM) - Produção média
# - t3.xlarge  (4 vCPU, 16GB RAM) - Produção alta
# 
# Memória alocada nos containers:
# - Redis: 128MB
# - Flask App: 256MB
# - Sistema: ~1.5GB+
# Total mínimo: ~2GB (t3.small) 